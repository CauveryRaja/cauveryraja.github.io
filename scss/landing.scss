// Bcckground - Star clusters and shooting stars
section.landing {
    width: 100vw;
    height: 95vh;
    position: relative;
    overflow: hidden;
    border-bottom-left-radius: 50%;
    border-bottom-right-radius: 90%;

    // background: linear-gradient(to bottom, black, rgba(186, 14, 160, 0.686)); // purple

    background: linear-gradient(to bottom, black, rgb(2, 150, 169)); // blue

    &::before {
        position: absolute;
        left: 0;
        bottom: -20px;
        content: '';
        display: block;
        width: 80%;
        height: 120px;
        background-color: aliceblue;
        opacity: 0.3;
        border-radius: 100%;
    }

    &::after {
        position: absolute;
        right: 0;
        bottom: -50px;
        content: '';
        display: block;
        width: 80%;
        height: 150px;
        background-color: aliceblue;
        opacity: 0.5;
        border-radius: 100%;
        transform: rotate(-15deg);
    }
}

@function generate-stars($width, $height, $density, $color, $delay) {
    $stars: '#{random($width)}px #{random($height)}px 0.5px 0.5px #{$color}';

    @for $i from 2 to $density {
        $stars: '#{$stars}, #{random($width)}px #{random($height)}px 0.5px 0.5px #{$color}';
    }

    @return unquote($stars);
}

@mixin star-content($color, $size, $density, $duration, $delay) {
    width: unquote('#{$size}px');
    height: unquote('#{$size}px');
    border-radius: 50%;
    box-shadow: generate-stars(2048, 2048, $density, $color, $duration);
    animation: unquote('shine #{$duration + $size*0.1}s #{$delay}s ease-in-out infinite alternate');
}

.star-cluster-white-small {
    @include star-content(white, 2, 400, 5, 0.5)
}

.star-cluster-white-medium {
    @include star-content(white, 3, 300, 3.5, 0.1)
}

.star-cluster-white-large {
    @include star-content(white, 4, 50, 3, 0.2)
}

.star-cluster-red {
    @include star-content(red, 2, 50, 4, 0.5)
}

.star-cluster-purple {
    @include star-content(rgb(191, 0, 255), 2, 50, 3, 0.8)
}

.star-cluster-blue {
    @include star-content(rgb(4, 209, 158), 2, 100, 2, 0.5)
}

@keyframes shine {
    0%, 28%, 45%, 76%, 95% {
        opacity: 1;
    }
    15%, 60%, 84%, 100% {
        opacity: 0.2;
    }
}

@mixin shooting-star-content($color, $size, $duration, $delay) {
    position: absolute;
    top: -20px;
    left: -20px;
    width: unquote('#{$size}px');
    height: unquote('#{$size}px');
    background-color: $color;
    border-radius: 50%;
    animation: shooting-star-path unquote('#{$duration}s') unquote('#{$delay}s') linear infinite forwards;
    animation-iteration-count: 1;

    &:after {
        content: '';
        display: block;
        width: 5px;
        height: 100px;
        background: linear-gradient(to bottom, transparent, $color);
        opacity: 0.5;
        transform: translate(-2px, -100px) rotate(-45deg);
        transform-origin: bottom;
    }

    @media screen and (max-width: 500px) {
        animation: shooting-star-path-mobile unquote('#{$duration}s') unquote('#{$delay}s') linear infinite forwards;
    }
}

.shooting-star-white {
    @include shooting-star-content(rgba(255, 255, 255, 0.82), 3, 15, 10);
}
.shooting-star-purple {
    @include shooting-star-content(rgb(251, 17, 173), 4, 15, 40);
}
.shooting-star-blue {
    @include shooting-star-content(rgb(4, 209, 158), 3, 20, 80);
}

// Shooting star for testing smoothness
.shooting-star-test {
    width: 50px;
    height: 50px;
    background-color: white;
    animation: shooting-star-path 10s 1s linear infinite;
}

@keyframes shooting-star-path {
    0% {
        transform: translate(-20px, -20px);
    }
    100% {
        transform: translate(70vw, 110vh);
    }
}

@keyframes shooting-star-path-mobile {
    0% {
        transform: translate(-20px, 20px);
    }
    100% {
        transform: translate(120vw, 60vh);
    }
}


// Content - Greeting with links
.container {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    width: 100%;
}

svg text {
    font-size: 55px;
    fill: transparent;
    animation: stroke-animation 3s forwards;
}

@keyframes stroke-animation {
    0%   {
        stroke: white;
		stroke-dashoffset: 25%; 
        stroke-dasharray: 0 50%; 
        stroke-width: 1;
	}
    50% {
        fill: transparent;
    }
	70%  {
        stroke: white;
    }
	80%  {
        stroke: white;
        stroke-width: 1; 
    }
	100% {
        fill: white;
		stroke-dashoffset: -25%; 
        stroke-dasharray: 50% 0; 
        stroke-width: 0;
	}
}

.svg-smiley {
    stroke: white;
    animation: fade-in 2s ease-in;
}

.bio {
    margin: 30px 0;
    color: rgb(190, 190, 190);
    animation: fade-in 2s ease-in;
}

.bio {
    display: flex;
    justify-content: center;
    align-items: center;

    .divider {
        position: relative;
        display: block;
        width: 3px;
        height: 40px;
        background-color: white;
        transform: rotate(-90deg) scaleY(0);
        animation: divider-spin 1s 2s ease-in-out forwards;
    }

    @mixin divider-wings($position, $leftWidth, $rightWidth) {
        position: absolute;
        @if $position == 'top' {
            top: 0;
        }
        @else {
            bottom: 0;
        }

        &::before {
            content: '';
            position: absolute;
            right: 0;
            display: block;
            width: $leftWidth;
            height: 3px;
            background-color: white;
            transform: scaleX(0);
            transform-origin: right;
            animation: divider-scale 1s 3s ease-in forwards;
        }

        &::after {
            content: '';
            position: absolute;
            left: 0;
            display: block;
            width: $rightWidth;
            height: 3px;
            background-color: white;
            transform: scaleX(0);
            transform-origin: left;
            animation: divider-scale 1s 3s ease-in forwards;
        }
    }

    .divider:nth-of-type(1) {
        .divider--top {
            @include divider-wings('top', 30px, 50px)
        }
        .divider--bottom {
            @include divider-wings('bottom', 80px, 120px)
        }
    }

    .divider:nth-of-type(2) {
        .divider--top {
            @include divider-wings('top', 80px, 80px)
        }
        .divider--bottom {
            @include divider-wings('bottom', 20px, 40px)
        }
    }

    .bio-item {
        color: rgb(244, 244, 244);
        overflow: hidden;

        .role {
            padding: 20px;
        }
    }

    .bio-item:nth-of-type(1) {
        .role {
            transform: translateX(100%);
            animation: role-slide-left 0.5s 3s ease-in forwards;
        }
    }

    .bio-item:nth-of-type(2) {
        .role {
            opacity: 0;
            animation: fade-in 0.5s 3s ease-in forwards;
        }
    }

    .bio-item:nth-of-type(3) {
        .role {
            transform: translateX(-100%);
            animation: role-slide-right 0.5s 3s ease-in forwards;
        }
    }
}

@keyframes divider-spin {
    0% {
        transform: rotate(-90deg) scaleY(0);
    }
    50% {
        transform: rotate(-90deg) scaleY(1);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes divider-scale {
    0% {
        transform: scaleX(0);
    }
    100% {
        transform: scaleX(1);
    }
}

@keyframes role-slide-left {
    0% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(0);
    }
}

@keyframes role-slide-right {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(0);
    }
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

.navigation-links a {
    text-decoration: none;
    padding: 15px;
    border-radius: 50%;
    border: 1px solid rgb(204, 204, 204);
    color: white;
    font-size: 26px;
    margin: 20px;
    opacity: 0;
    animation: slide-in 1s ease-in forwards;

    &:hover {
        color: rgb(128, 199, 253);
    }
}

.navigation-links a:nth-child(1) {
    animation-delay: 4s;
}

.navigation-links a:nth-child(2) {
    animation-delay: 4.3s;
}

.navigation-links a:nth-child(3) {
    animation-delay: 4.6s;
}

@keyframes slide-in {
    0% {
        opacity: 0;
        transform: translateY(300%);
    }
    60% {
        opacity: 1;
        transform: scaleY(1) translateY(-100%);
    }
    61% {
        transform: scaleY(0.8) translateY(-100%);
    }
    100% {
        opacity: 1;
        transform: scaleY(1) translateY(0%);
    }
}


@media screen and (max-width: 500px) {
    section.landing {
        border-bottom-left-radius: 40%;
        border-bottom-right-radius: 70%;
    }
    
    .svg-text {
        padding: 0 20px;
    }

    .svg-text text {
        font-size: 40px;
    }
}